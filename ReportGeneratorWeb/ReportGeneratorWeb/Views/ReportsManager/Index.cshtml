@using Microsoft.AspNetCore.Mvc.Rendering


@model ReportGeneratorWeb.Models.ReportsModel
@{
    ViewBag.Title = "Генератор отчетов";
    Layout = "~/Views/_Layout.cshtml";
}
<div class="container">
    <h4>@ViewBag.Title</h4>
    <div class="row main-row">
        <div class="col-md-4 main-row-column">
            <div class="row files-list-row">
                <h6> <b>Список файлов параметров: </b></h6> <br/>
                <div>
                @{
                    using (Html.BeginForm("GetParamsFile", "ReportsManager", FormMethod.Get))
                    {
                        SelectListItem[] paramsListItems = Model.ParametersFiles.Select(p =>
                        {
                            return new SelectListItem()
                            {
                                Text = p.ParametersFileName,
                                Value = p.ParametersFileName
                            };
                        }).ToArray();
                        @Html.ListBox("parameteresFileName", paramsListItems, new { id = "reports-params-files-list", @class = "form-control files-list" })
                        <button class="btn btn-default pull-right files-download-btn" id="get-report-param-file-btn" disabled>
                            <!--<span style="margin-right: 5px;" class="glyphicon glyphicon-download"></span> -->
                            Скачать
                        </button>
                    }
                }
                </div>
            </div>
            <div class="row files-list-row">
                <h6> <b>Список файлов шаблонов: </b></h6>
                <div>
                @{
                    using (Html.BeginForm("GetTemplateFile", "ReportsManager", FormMethod.Get))
                    {
                        SelectListItem[] templatesListItems = Model.TemplatesFiles.Select(p =>
                        {
                            return new SelectListItem()
                            {
                                Text = p,
                                Value = p
                            };
                        }).ToArray();
                        @Html.ListBox("templateFileName", templatesListItems, new { id = "reports-templates-files-list", @class = "form-control files-list" })
                        <button class="btn btn-default pull-right files-download-btn" id="get-report-template-file-btn" disabled="">
                            <!--<span style="margin-right: 5px;" class="glyphicon glyphicon-download"></span>-->
                            Скачать
                        </button>
                    }
                }
                </div>
        </div>
        <div class="col-md-8 main-row-column">
            <h6> Файл параметров: <b id="param-file-name-title"></b></h6>
            <p><b> Имя для отображения: </b>
            </p>
            @Html.TextArea("ParamsDisplayName", "", new {id = "param-file-display-name", @class = "form-control param-file-block param-file-displayname", style="height: 10%"})

            <p><b> Описание: </b>
            </p>
            @Html.TextArea("ParamsDescription", "", new {id = "param-file-description", @class = "form-control param-file-block param-file-description", style = "height: 15%" })

            <p><b> Содержимое файла: </b>
            </p>
            @Html.TextArea("ParamsFileContent", "", new {id = "params-file-content", @class = "form-control param-file-block param-file-content", style = "height: 45%" })
        </div>
    </div>
    <div class="row report-gen-row">
        <h6>Генерация отчетов для выбранных файла параметра <b id="selected-4gen-param-file"></b> и шаблона <b id="selected-4gen-template-file"></b> :</h6>
        @{
            using (Html.BeginForm("GenerateReport", "ReportsManager", FormMethod.Get, new {@class="form-inline"}))
            {
                // make here hidden fields
                @Html.Hidden("parametersFile", "", new {id = "form-selected-param-file"})
                @Html.Hidden("templateFile", "", new { id = "form-selected-template-file" })

                // following shoud be placed inside form group
                // worksheet
                <div class="form-group">
                    @Html.Label("worksheet", "Лист Excel:", new { @class = "", id = "worksheet-form-label" })
                    @Html.TextBox("worksheet", 1, new {@class = "form-control short-form-item", style = "width: 80px;", id ="worksheet-form-item"})
                </div>
                // row
                <div class="form-group">
                    @Html.Label("row", "№ строки:", new { @class = "", id = " row-form-label" })
                    @Html.TextBox("row", 1, new {@class = "form-control short-form-item", style="width: 80px;", id="row-form-item"})
                </div>
                // column
                <div class="form-group">
                    @Html.Label("column", "№ столбца:", new { @class = "", id = "column-form-label" })
                    @Html.TextBox("column", 1, new {@class = "form-control short-form-item", style = "width: 80px;", id ="column-form-item"})
                </div>
                // submit
                <button id="generate-form-submit-btn" type="submit" class="btn btn-default" disabled>Сгенерировать</button>
            }
        }
    </div>
</div>

<script type="text/javascript">
    var model = @Html.Raw(Json.Serialize(Model));
    $("#reports-params-files-list").change(function () {
        $("#get-report-param-file-btn").prop('disabled', false);
        // console.log("Selected parameters file was changed");
        var paramsFiles = model.parametersFiles;
        var selectedValues = $("#reports-params-files-list").val();  // multiselect ? why ?
        var selectedValue = selectedValues != null && selectedValues.length > 0 ? selectedValues[0] : "";
        $("#selected-4gen-param-file").text(selectedValue);
        for (var i = 0; i < paramsFiles.length; i++) {
            var pf = paramsFiles[i];
            if (pf.parametersFileName === selectedValue){
                console.log("updating interface 4 procedure file: " + pf.parametersFileName);
                // implement update ...
                // header to procedure name
                $("#param-file-name-title").text(pf.parametersFileName);
                $("#form-selected-param-file").val(pf.parametersFileName);
                // display name
                var displayName = pf.displayName;
                if (displayName != null) {
                    $("#param-file-display-name").val(displayName);
                } else {
                    $("#param-file-display-name").val("");
                }

                var description = pf.description;
                if (description != null) {
                    $("#param-file-description").val(description);
                } else {
                    $("#param-file-description").val("");
                }

                $("#params-file-content").val(pf.fileContent.join("\n"));
            }
        }
        if ($("#form-selected-param-file").val() !== "" && $("#form-selected-template-file").val() !== "")
            $("#generate-form-submit-btn").prop('disabled', false);

    });

    $("#reports-templates-files-list").change(function() {
        $("#get-report-template-file-btn").prop('disabled', false);
        var selectedValues = $("#reports-templates-files-list").val();  // multiselect ? why ?
        var selectedValue = selectedValues != null && selectedValues.length > 0 ? selectedValues[0] : "";
        $("#selected-4gen-template-file").text(selectedValue);
        $("#form-selected-template-file").val(selectedValue);
        if ($("#form-selected-param-file").val() !== "" && $("#form-selected-template-file").val() !== "")
            $("#generate-form-submit-btn").prop('disabled', false);
    });
</script>